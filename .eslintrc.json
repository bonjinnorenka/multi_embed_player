{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
        "@typescript-eslint/naming-convention": [
            "error",
            // デフォルトの命名規則（既存のコードを尊重）
            {
                "selector": "default",
                "format": [
                    "camelCase",
                    "PascalCase",
                    "snake_case",
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            // 既存のクラス名パターンを許可（MultiEmbedPlayer, mep_* など）
            {
                "selector": "class",
                "format": [
                    "PascalCase",
                    "snake_case"
                ],
                "custom": {
                    "regex": "^(MultiEmbedPlayer|mep_[a-z_]+|[A-Z][a-zA-Z0-9]*|[a-z_]+)$",
                    "match": true
                }
            },
            // 既存の変数名パターンを許可
            {
                "selector": "variable",
                "format": [
                    "camelCase",
                    "PascalCase",
                    "snake_case",
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            // 既存の関数名パターンを許可
            {
                "selector": "function",
                "format": [
                    "camelCase",
                    "PascalCase",
                    "snake_case"
                ]
            },
            // 既存のインターフェース名を許可
            {
                "selector": "interface",
                "format": [
                    "PascalCase"
                ]
            },
            // 既存のタイプエイリアス名を許可
            {
                "selector": "typeAlias",
                "format": [
                    "PascalCase"
                ]
            },
            // 既存のenum名を許可
            {
                "selector": "enum",
                "format": [
                    "PascalCase"
                ]
            },
            // 既存のプロパティ名を許可（数値キーも含む）
            {
                "selector": "property",
                "format": [
                    "camelCase",
                    "snake_case",
                    "PascalCase",
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow",
                "filter": {
                    "regex": "^[0-9]+$",
                    "match": false
                }
            },
            // 数値のプロパティ名を許可
            {
                "selector": "property",
                "format": null,
                "filter": {
                    "regex": "^[0-9]+$",
                    "match": true
                }
            },
            // 既存のメソッド名を許可
            {
                "selector": "method",
                "format": [
                    "camelCase",
                    "snake_case"
                ],
                "leadingUnderscore": "allow"
            }
        ]
    },
    "ignorePatterns": [
        "node_modules/",
        "dist/",
        "*.js",
        "*.d.ts"
    ]
}